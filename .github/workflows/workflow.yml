name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    env:
      PROJECT_NAME: KoureiFes_Quiz # プロジェクト名
      DEPLOY_SERVER_HOST: r-techlab@r-techlab.sakura.ne.jp # デブロイサーバー
      DEPLOY_REMOTE_PATH: /home/r-techlab/www/Enchan/App/ # デプロイ先リモートパス

    runs-on: ubuntu-latest
    steps:

    # リポジトリをチェックアウト
    - uses: actions/checkout@v2

    # SSHキーをインストール
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v1
      with:
        private-key: ${{ secrets.SSH_KEY }}
        name: id_rsa
        known-hosts: ${{ secrets.KNOWN_HOSTS }}

    # node.js
    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    # PHP
    - name: Setup PHP with composer v2
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: composer:v2

    # nodeモジュールをキャッシュ
    - name: Cache node modules
      id: node_modules_cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-${{ env.cache-name }}-
          ${{ runner.os }}-node-modules-

    # nodeパッケージの更新とインストール
    - name: Install yarn dependencies
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: |
        yarn upgrade
        yarn install --force

    # composerパッケージをキャッシュ
    - name: Cache composer packages
      id: composer_cache
      uses: actions/cache@v2
      env:
        cache-name: cache-composer-packages
      with:
        path: '**/vendor'
        key: ${{ runner.os }}-composer-packages-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-packages-${{ env.cache-name }}-
          ${{ runner.os }}-composer-packages-

    # composerパッケージのインストール
    - name: Install dependencies
      if: steps.composer_cache.outputs.cache-hit != 'true'
      run: composer update --prefer-dist

    # アセットのビルド
    - name: Build assets
      run: |
        yarn encore prod

    # .env.localをsecretsから展開
    - name: make .env.local
      run: echo "${{ secrets.DOTENV_LOCAL }}" > .env.local
    
    # リポジトリを圧縮
    - name: Compress repository contents
      run: |
        cd ../
        tar -czf "${{ env.PROJECT_NAME }}.tgz" ${{ env.PROJECT_NAME }}/

    # SFTPで転送して展開
    - name: Transfer via SFTP
      run: |
        cd ../
        sftp ${{ env.DEPLOY_SERVER_HOST }}:${{ env.DEPLOY_REMOTE_PATH }} <<< $'put ${{ env.PROJECT_NAME }}.tgz'
        ssh ${{ env.DEPLOY_SERVER_HOST }} "cd ${{ env.DEPLOY_REMOTE_PATH }}; tar -xzf ${{ env.PROJECT_NAME }}.tgz"

    # デプロイ先で走らせたいスクリプトを実行
    - name: Execute custom deploy sctipts
      run: ssh ${{ env.DEPLOY_SERVER_HOST }} "cd ${{ env.DEPLOY_REMOTE_PATH }}${{ env.PROJECT_NAME }};bash deploy.sh"

    # SFTPで送ったファイルを削除
    - name: Remove compressed file
      run: ssh ${{ env.DEPLOY_SERVER_HOST }} "cd ${{ env.DEPLOY_REMOTE_PATH }}; rm ${{ env.PROJECT_NAME }}.tgz"
